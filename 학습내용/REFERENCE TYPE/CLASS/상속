상속이란 ? 
public class 자식class 이름 extends 부모class{}
부모가 가지고 있던 변수와 method를 자식이 그대로 물려받는 것을 말한다 .
둘의 연관성을 따져보아 자식class의 경우에는 기존에 부모 class가 가지고 있던 기능에서 
더 추가 하고 싶은 기능만 추가해주면 끝나기 때문에 효율적이다. 


*super();?
부모 자식간의 class 관계가 형성이 되면 자식 class의 객체를 생성하고나서 Member변수를 정의하지않고 
또 기본생성자를 통해 초기화를 하지 않아도 값이 나오는 것을 알 수가 있다. 


 ex)
SuperMan sm = new SuperMan();
System.out.println(sm.이름);     

결과값: 아이유 

이는 부모 class가 가지고 있던 생성자를 불러오는 코드가 자식 class에 있기 때문인데 그것이 super();이다 
super();는 부모 class의 정보를 불러오는 것을 말한다 .
(this(나를 가리킴),super(부모를 가리킴),this(); 나를 가리키는 생성자 , super();부모를 가리키는 생성자)


*헷갈리지 말아야 할점 
기본생성자(){ }를 쓰지 않아도 super();가 발동되는데 왜 그럴까? 
기본적으로 class에는 기본사항을 적는생성자(){}를 쓰지않아도 적어도 1개는 있다고 치기 때문이다.
즉 아무런 것도 적지않고 출력하면 0과NULL이 나오게 되는데 이게 기본생성자를 이루고 있다.


*매개변수를 가지는 생성자를 만들 경우
super(매개변수);를 통해 부모 class의 매개변수 있는 생성자를 가지고 온다. 여기에서 매개변수는 가지고 오고 싶은것에대해서
순서에 맞게 작성해 주어야 한다. 
또한 super에 없는 것을 추가하고싶은경우엔 this.을 통해 추가해 준다. 

ex)
SuperMan(String 이름, String 직업, int 나이, float 키, float 몸무게) {
		// 부모 생성자 중에 가져올 것에 대해서 매개변수를 적어주고 (순서에맞게) 그중 없는것을 따로 추가해준다. 부모(기본),자식(확장)
		super(이름, 직업, 몸무게, 키);
		this.나이 = 나이;

---------------------------------------------------------------------------------------------------------------------------------------
Overriding(재정의)
상속하여 받는 정보에 대해서 수정하는것
만약 바꾸려는 것이 method라면 부모 method와 똑같은 method 명을 입력한 후에 
내용을 변경한다. 주의할 점은 자식 method의 경우 부모 method보다 제한지정자가 더 허용적이어야만 한다. 
즉  (부모=public 자식 = default x   부모=defult 자식 =protected,public o)


*@Override
 compiler에게 상속받는게 맞는지 확인좀 해달라는 말이다. 없으면 에러가 발생한다.
 만약 override했는데 부모의 노래부르기 기능을 바꾸고싶은데 노래부르자로 실수로 바꾸게 되어 노래부르기를 호출해도 부모 기능이 호출되는
 불상사가 발생.
 그것을 막기위해 override 표시를하고 노래부르기 이름이 노래부르자로 바뀌게 되면 에러가 발생하도록 막는다.

ex)
@Override
public void 노래부르기() {              <-노래부르기를 노래부르자로 바꾸게 되면 에러가난다 부모 method이름이 노래부르기이기때문.
		System.out.println("나 좋은 꿈을 꿨어요~");
		
		
