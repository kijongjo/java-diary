import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class Chatting extends JFrame implements KeyListener {
	JPanel jpCenter, jpSouth;
	JScrollPane JSP;
	JTextArea JTA;
	JButton jbtn;
	JTextField jtf;
	String[] msg = { "밥먹었어?", "졸리지?", "그냥 집에가라", "나이쑤", "밥은 먹고다니니", "오늘은 불금", "달료" };
	Random rnd = new Random();


Chatting() {
		// 컴포넌트 초기화
		jpCenter = new JPanel();
		jpSouth = new JPanel();
		JTA = new JTextArea();
		JSP = new JScrollPane(JTA, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,         <-SCROLL 판에 TEXT를 올리기 
				  JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		jbtn = new JButton("전송");
		jtf = new JTextField(25);
		setDefaultCloseOperation(EXIT_ON_CLOSE);                                     <-윈도우창 종료하기 

		jpSouth.add(jtf);                                                            <-채팅입력창이될 판넬구역에 TEXT와 버튼 붙이기
		jpSouth.add(jbtn);
		Font f = new Font("굴림체", Font.PLAIN, 20);
		JTA.setFont(f);
		jtf.addKeyListener(this);

		jpCenter.setBackground(Color.GRAY);
		jpSouth.setBackground(Color.GRAY);
		BorderLayout b1 = new BorderLayout();                                       <-상하좌우중앙으로 구분되어 꾸미도록 하는 옵션
		jpCenter.setLayout(b1);                                   
		jpCenter.add(JSP);              
	
		add(jpCenter, "Center");
		add(jpSouth, "South");
		setTitle("채팅창");
		setBounds(100, 100, 400, 600);
		
		JTA.setEditable(false);                                                     <-사용자가 TEXTAREA를 수정 하지 못하게 하기
		
    setVisible(true);

		try {
			Thread.sleep(1000); //                                                 
		} catch (InterruptedException e) {                                        <-1초 있다가 말하도록 함. visible 아래에 두어야한다.
			
			e.printStackTrace();
		}
		JTA.append("심심이:안녕 반가워~");                                         <-키자마자 말풍선이 보이도록한다.
		jtf.requestFocusInWindow();                                               <-모르겟음.
	}

	public static void main(String[] args) {
		Chatting ch = new Chatting();
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyPressed(KeyEvent e) {
		int code = e.getKeyCode();                                               <-아스키코드로 가져온다.

		if (code == KeyEvent.VK_ENTER) {

			String data = jtf.getText();                           <-getTEXT()=>METHOD이름:String return하는 타입 JTextComponent 클래스
			JTA.append("me :" + data + "\n" + "\n");               <-뒤에다 계속 붙이는것.settext는 새로고침해 들어가는것.
			System.out.println(data);
			jtf.setText("");
			// 랜덤하게 대답하기
			// 배열의 길이
			int pos = rnd.nextInt(msg.length);                      <-0부터 6사이의 정수가 올것, 주어진 배열에 들어간 말풍선을 뽑아내기 
		
			
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			
				JTA.append("심심이 : "+ msg[pos]+"\n");    
			
			
			 
		
		}

	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub

	}
}
