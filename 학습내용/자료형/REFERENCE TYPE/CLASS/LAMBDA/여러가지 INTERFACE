Consumer?


리턴값이 없는 accept()를 가지고 있음.

accept()는 매개값을 사용하는 역할을 함.

매개변수 타입, 수에 따라 Consumer들이 다르다.



ex)
s는 accept 값 ->로 처리 
import java.util.function.Consumer;

public class LamdaEx10 {
	public static void main(String[] args) {

		Consumer<String> c = 
				s -> System.out.println(s);

		c.accept("오늘은");
		c.accept("수능 이브");
	}
}


Supplier? 

매개변 수는 없고 return값만 존재 한다. 

ex)
		Supplier<String> s = () -> "hello Supplier";
		String result = s.get();
		System.out.println("______________");
		System.out.println(result);


Predicate<T>?
하나의 매개변수와 리턴타입 존재 
boolean을 반환한다. 


ex)
	Predicate<String> p =str ->str.isEmpty();
		boolean result3 = p.test("Hello");
		System.out.println("_____");
		System.out.println(result3);
    
    
 Function<T,R>
	전형적 함수 지원
	하나의 인자와 리턴타입

		Function<String, Integer> f = str -> Integer.parseInt(str);

		Integer result2 = f.apply("1");
		System.out.println("_");
		System.out.println(result2);
    
  








