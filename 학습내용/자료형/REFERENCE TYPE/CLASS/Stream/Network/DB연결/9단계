 1.변수선언
 2.jdbc 드라이버 로딩되어 있는지 여부 체크
 3.연결(connection)
 4.sql문 작성
 5.문장 객체 생성
 6.실행(select ==> resultset)
 7.레코드별 처리,다음 레코드로 이동 
 8.자원반납


1.변수 선언

		String driver = "oracle.jdbc.driver.OracleDriver";
		String user = "scott";
		String password = "tiger";
		Connection conn = null;
		String sql = "SELECT empno,ename,sal FROM emp";
		ResultSet rs = null;
	
2.JDBC 드라이버 로딩
		String url = "jdbc:oracle:thin:@192.168.0.35:1521:orcl";
                  jdbc:jdbc에서
		                   oracle: oracle 연결
		                          thin: thin방식으로 연결
		                               @IP:접속할 서버의 IP
		                                             1521:통신하기 위한 PORT
		                                                   ORCL:DB NAME
                                                       
                                                       
                                                       
                                                       
3.jdbc 드라이버 로딩되어 있는지 여부 체크
	  Class.forName(driver);
			
            
4.연결(connection)
	  conn = DriverManager.getConnection(url, user, password);      
    

5.sql문 작성
		String sql = "SELECT * FROM dept where deptno=10";
    

6.문장 객체 생성
    pstmt = conn.prepareStatement(sql);
   
   
7.실행(select ==> resultset)
	   rs = pstmt.executeQuery();
    

8.레코드별 처리,다음 레코드로 이동
		
			while (rs.next()) {                                       <-다음 줄을 가져오도록 하는 명령어 
				int deptno = rs.getInt("deptno");                       <-가져온 값의 데이터 타입에 따라 명령어가 다르다.String의 경우 getString
				String dname = rs.getString(2);                         <-두번째 컬럼을 가져오고 싶을때 0번부터가 아닌 1번부터 시작한다.
				String loc = rs.getString("loc");
				System.out.println(deptno + ":" + dname + ":" + loc);
        
 
9.자원 반납
      if (rs != null)
					rs.close();
			if (pstmt != null)
					pstmt.close();
			if (conn != null)
					conn.close();

                                                       
                                                       
