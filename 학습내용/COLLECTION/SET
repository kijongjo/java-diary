hashSet?
객체를 넣는데 중복된 것을 넣지 않는다. 
import java.util.HashSet;
import java.util.Iterator;

class(){
HashSet 객체이름 = new HashSet();
객체이름.add(객체);
}

*객체이름.size();
class에 들어간 객체 수를 나타냄 
-----------------------------------------------------------------------------------------------------------
들어있는 객체 값 출력? 
Iterator it = hashSet객체이름.iterator();  
Iterator를 사용해야 한다. iterator는 반복자이다. 
hashset에 들어있는 값을 출력하기 위해선 while문을 이용해 하나씩 출력해야한다.
while문에 들어가는 iterator의 method = hasnext와 next 가 들어가야한다.

hashSet객체이름.hasNext(); 
class에 객체가 남아있는지 없는지를 불리언타입으로 알려준다. 
hashSet객체이름.Next(); 
하나씩 하나씩 객체에서 꺼내준다         <-중요한 것은 꺼내고나면 안에 들어 있는 갯수가 줄어든다.



*setinterface와 list의 차이점


list의 특징        : 중복된 값을 허용한다. 순서가있다. 
setinterface의 특징: 순서가 없다. 중복된 값이 없다.


-----------------------------------------------------------------------------------------------------------------------
ex)
hashset과 iterator을 사용한 문제
package day15;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Random;

public class HashSetEx2 {
	public static void main(String[] args) {
		// int 6칸짜리 배열 m 선언
		int[] m = new int[6];
		// HashSet 객체 생성
		HashSet hs = new HashSet();
		// 랜덤하게 1부터 45사이의 값 뽑기
		Random rnd = new Random();

		// hashset에 담기
		label: while (true) {
			for (int i = 0; i < m.length; i++) {
				hs.add(rnd.nextInt(45));
			}
			// hashset의 요소 갯수가 6개라면 중단
			if (hs.size() == 6) {
				break;
				// 아니면 3번으로 돌아가기
			} else if (hs.size() < 6) {
				continue label;
			}
		}
		// hashset에서 1개씩 값을 꺼내 배열에 담기
		Iterator it = hs.iterator();

		//
		while (it.hasNext()) {
			for (int i = 0; i < m.length; i++) {
				m[i] = (int) it.next();//객체를 뽑아오기 때문에 string으로 변환 시켜주어야한다.
			}

		}
		// 정렬하기
		Arrays.sort(m);
		// 배열 요소를 1개씩 꺼내 화면에 출력
		for (int i = 0; i < m.length; i++) {
			System.out.print(m[i] + "\t");
		}

	}
}

--------------------------------------------------------------------------------------------------------------------------------------------------
HashMap?
 import java.util.Set;
 import java.util.HashMap;
 class(){
 HashMap 객체이름 = new HashMap();
 hm.put(key, value);                <-추가할 때 쓰는 method put(key,value)
 Object obj = hm.get(key); // <-꺼내는 명령어로 get. key값을 알아야 꺼낼 수 있다. object를 return한다.
 System.out.println(obj);
 }
 
 KEY,VALUE를 쌍으로 묶는다. (KEY,VALUE)        짝을 지어서 쓰는것.
         KEY = 중복X 
       VALUE = 중복O 

ex)
hm.put("국보 1호", "숭례문");

*key목록 보고 출력하기 
Set set=hm.keySet(); <-key가 있는지 없는지 보는데 set으로 리턴한다. 
		
		             <-목록을 출력 
		
set.get(0);는 안된다. iterator를 써야한다 
		
Iterator it = set.iterator();
		
while(it.hasNext()) {
		Object obj1 = it.next();
		System.out.println(obj1+":"+hm.get(obj1));  <-key랑 value랑 나란히 출력해라.
		
*KEY 제거
hm.remove(KEY);//제거기능 key를 써준다.
			



